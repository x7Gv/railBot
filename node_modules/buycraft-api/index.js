var request = require('request');

var BuyCraftQueue = require('./api/queue.js');
var BuyCraftStore = require('./api/store.js');

var BuyCraft = function(token) {

    this.endpoint = 'https://plugin.buycraft.net/';

    this.token = token;

    this.store = new BuyCraftStore(this);
    this.queue = new BuyCraftQueue(this);

}

BuyCraft.prototype.get = function(method, callback) {

    request.get({
        url: this.endpoint+method,
        headers: { 'X-Buycraft-Secret': this.token }
    }, function(err, response, body) {

        if (err) {return callback(err);}

        var data = JSON.parse(body);

        if (response.statusCode !== 200) {
            return callback(new Error(data.error_message));
        } else return callback(null, data);

    });

}

BuyCraft.prototype.post = function(method, data, callback) {

    request.post({
        url: this.endpoint+method, formData: data,
        headers: { 'X-Buycraft-Secret': this.token }
    }, function(err, response, body) {

        if (err) {return callback(err);}

        var data = JSON.parse(body);

        if (response.statusCode !== 201) {
            return callback(new Error(data.error_message));
        } else return callback(null, data);

    });

}

BuyCraft.prototype.del = function(method, query, callback) {

    request.del({
        url: this.endpoint+method+"?"+query,
        headers: { 'X-Buycraft-Secret': this.token }
    }, function(err, response, body) {

        if (err) {return callback(err);}

        if (response.statusCode !== 204) {
            return callback(new Error("The remote server returned: " + response.statusCode));
        } else return callback(null);

    });

}

module.exports = BuyCraft;
